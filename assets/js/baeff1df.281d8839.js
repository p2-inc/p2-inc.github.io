"use strict";(self.webpackChunkphasetwo_docs=self.webpackChunkphasetwo_docs||[]).push([[40864],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var i=n(96540);const a={},s=i.createContext(a);function o(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:t},e.children)}},37969:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api/authentication","title":"Authentication API","description":"Authentication is achieved by using the Authentication: Bearer  header in all requests. This is either the access token received from a normal authentication, or by a request directly to the OpenID Connect token endpoint.","source":"@site/docs/api/authentication.md","sourceDirName":"api","slug":"/api/authentication","permalink":"/docs/api/authentication","draft":false,"unlisted":false,"editUrl":"https://github.com/p2-inc/phasetwo-docs/tree/main/docs/api/authentication.md","tags":[],"version":"current","frontMatter":{"id":"authentication","sidebar_label":"Authentication","title":"Authentication API"},"sidebar":"docs","previous":{"title":"Access Service Accounts","permalink":"/docs/api/service-accounts"},"next":{"title":"Software Development Kits","permalink":"/docs/api/sdks"}}');var a=n(74848),s=n(28453);const o={id:"authentication",sidebar_label:"Authentication",title:"Authentication API"},c=void 0,r={},l=[{value:"Example requests",id:"example-requests",level:3},{value:"Client credentials grant example",id:"client-credentials-grant-example",level:4},{value:"Password grant example",id:"password-grant-example",level:4},{value:"Example response",id:"example-response",level:3}];function d(e){const t={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["Authentication is achieved by using the ",(0,a.jsx)(t.code,{children:"Authentication: Bearer <token>"})," header in all requests. This is either the access token received from a normal authentication, or by a request directly to the OpenID Connect token endpoint."]}),"\n",(0,a.jsxs)(t.p,{children:["It is recommended that you use a Keycloak Admin Client, such as ",(0,a.jsx)(t.a,{href:"https://github.com/keycloak/keycloak-nodejs-admin-client",children:"this one for Javascript"}),", as they take care of authentication, getting an access token, and refreshing it when it expires."]}),"\n",(0,a.jsx)(t.h3,{id:"example-requests",children:"Example requests"}),"\n",(0,a.jsx)(t.h4,{id:"client-credentials-grant-example",children:"Client credentials grant example"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"client_credentials"})," grant type is used if you are following the recommended convention of making a service account to call the APIs. See the previous section on ",(0,a.jsx)(t.a,{href:"../service-accounts",children:"service accounts"})," if you need to set one up."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"POST /auth/realms/test-realm/protocol/openid-connect/token\nHost: app.phasetwo.io\nAccept: application/json\nContent-type: application/x-www-form-urlencoded\n\ngrant_type=client_credentials&client_id=admin-cli&client_secret=fd649804-3a74-4d69-acaa-8f065c6b7da1\n"})}),"\n",(0,a.jsx)(t.h4,{id:"password-grant-example",children:"Password grant example"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"password"})," grant type can be used if normal users are using their credentials to obtain a token manually for the purpose of calling the APIs."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"POST /auth/realms/test-realm/protocol/openid-connect/token\nHost: app.phasetwo.io\nAccept: application/json\nContent-type: application/x-www-form-urlencoded\n\ngrant_type=password&username=uname@foo.com&password=pwd123AZY&client_id=admin-cli\n"})}),"\n",(0,a.jsx)(t.h3,{id:"example-response",children:"Example response"}),"\n",(0,a.jsx)(t.p,{children:"The response to each type will be a JSON document containing the access token and some information about type and expiration."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",\n  "token_type": "bearer",\n  "expires_in": 60\n}\n'})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"access_token"})," value will be used in the ",(0,a.jsx)(t.code,{children:"Authorization: Bearer {access_token}"})," header for all authenticated API requests."]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);