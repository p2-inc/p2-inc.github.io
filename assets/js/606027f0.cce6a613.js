"use strict";(self.webpackChunkphasetwo_docs=self.webpackChunkphasetwo_docs||[]).push([[5552],{18056:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"audit-logs/access","title":"Access","description":"Phase Two records access event types that pertain to end users use of the Phase Two and customer systems. These are primarily registration, login and account management actions.","source":"@site/docs/audit-logs/access.md","sourceDirName":"audit-logs","slug":"/audit-logs/access","permalink":"/docs/audit-logs/access","draft":false,"unlisted":false,"editUrl":"https://github.com/p2-inc/phasetwo-docs/tree/main/docs/audit-logs/access.md","tags":[],"version":"current","frontMatter":{"id":"access","title":"Access"},"sidebar":"docs","previous":{"title":"Audit Logs","permalink":"/docs/audit-logs/"},"next":{"title":"Admin","permalink":"/docs/audit-logs/admin"}}');var c=s(74848),i=s(28453);const a={id:"access",title:"Access"},o=void 0,d={},r=[{value:"Example",id:"example",level:2},{value:"Event types",id:"event-types",level:2},{value:"Login events",id:"login-events",level:3},{value:"Account events",id:"account-events",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.p,{children:"Phase Two records access event types that pertain to end users use of the Phase Two and customer systems. These are primarily registration, login and account management actions."}),"\n",(0,c.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,c.jsxs)(n.p,{children:["The following is an example of the detail contained in an ",(0,c.jsx)(n.code,{children:"access.LOGIN"})," event:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "uid": "8d76de08-1c12-4d9a-bb86-fd1c602b2486",\n  "time": 1588363619462,\n  "realmId": "customer.app",\n  "type": "access.LOGIN",\n  "authDetails": {\n    "realmId": "customer.app",\n    "clientId": "web-app",\n    "userId": "f7cd3491-7c6c-480c-bc5c-b2b3b0fb048c",\n    "ipAddress": "78.195.109.209",\n    "username": "johndoe",\n    "sessionId": "70c446c9-ed9a-4c9e-9a72-d26363bb4000"\n  },\n  "details": {\n    "auth_method": "openid-connect",\n    "redirect_uri": "https://customer.com/dashboard",\n    "consent": "no_consent_required",\n    "code_id": "70c446c9-ed9a-4c9e-9a72-d26363bb4000",\n    "username": "johndoe"\n  }\n}\n'})}),"\n",(0,c.jsxs)(n.p,{children:["Field definitions can be viewed in the ",(0,c.jsx)(n.a,{href:"../api",children:"API documentation"}),"."]}),"\n",(0,c.jsx)(n.h2,{id:"event-types",children:"Event types"}),"\n",(0,c.jsxs)(n.p,{children:["All access event types are indicated in the ",(0,c.jsx)(n.code,{children:"type"})," field of the json event with the ",(0,c.jsx)(n.code,{children:"access."})," prefix."]}),"\n",(0,c.jsx)(n.h3,{id:"login-events",children:"Login events"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"LOGIN - A user has logged in."}),"\n",(0,c.jsx)(n.li,{children:"REGISTER - A user has registered."}),"\n",(0,c.jsx)(n.li,{children:"LOGOUT - A user has logged out."}),"\n",(0,c.jsx)(n.li,{children:"CODE_TO_TOKEN - An application/client has exchanged a code for a token."}),"\n",(0,c.jsx)(n.li,{children:"REFRESH_TOKEN - An application/client has refreshed a token."}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"account-events",children:"Account events"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"SOCIAL_LINK - An account has been linked to a social provider."}),"\n",(0,c.jsx)(n.li,{children:"REMOVE_SOCIAL_LINK - A social provider has been removed from an account."}),"\n",(0,c.jsx)(n.li,{children:"UPDATE_EMAIL - The email address for an account has changed."}),"\n",(0,c.jsx)(n.li,{children:"UPDATE_PROFILE - The profile for an account has changed."}),"\n",(0,c.jsx)(n.li,{children:"SEND_RESET_PASSWORD - A password reset email has been sent."}),"\n",(0,c.jsx)(n.li,{children:"UPDATE_PASSWORD - The password for an account has changed."}),"\n",(0,c.jsx)(n.li,{children:"UPDATE_TOTP - The TOTP settings for an account have changed."}),"\n",(0,c.jsx)(n.li,{children:"REMOVE_TOTP - TOTP has been removed from an account."}),"\n",(0,c.jsx)(n.li,{children:"SEND_VERIFY_EMAIL - An email verification email has been sent."}),"\n",(0,c.jsx)(n.li,{children:"VERIFY_EMAIL - The email address for an account has been verified."}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["For all events, there is a corresponding error event, suffixed with ",(0,c.jsx)(n.code,{children:"_ERROR"}),", which indicates a problem when performing the indicated action."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var t=s(96540);const c={},i=t.createContext(c);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);