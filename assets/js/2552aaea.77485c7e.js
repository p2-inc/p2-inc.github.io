"use strict";(self.webpackChunkphasetwo_docs=self.webpackChunkphasetwo_docs||[]).push([[6266],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return d}});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(a),d=o,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return a?n.createElement(h,r(r({ref:t},c),{},{components:a})):n.createElement(h,r({ref:t},c))}));function d(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,r=new Array(i);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6062:function(e,t,a){a.d(t,{ZP:function(){return r}});var n=a(83117),o=(a(67294),a(3905));const i={toc:[]};function r(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"It is bad practice to use your Admin user to sign in to an Application.")),(0,o.kt)("p",null,"Since we do not want to use our Admin user for signing into the app we will build, we need to add a another non-admin user."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Open the Admin UI by clicking ",(0,o.kt)("strong",{parentName:"li"},"Open Console")," in the Phase Two Dashboard."),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Users")," in the menu."),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Add user"),"."),(0,o.kt)("li",{parentName:"ol"},"Fill out the information for Email, First name, and Last name. Click ",(0,o.kt)("strong",{parentName:"li"},"Create"),"."),(0,o.kt)("li",{parentName:"ol"},"We will now set the password for this user manually. Click ",(0,o.kt)("strong",{parentName:"li"},"Credentials")," (tab) and click ",(0,o.kt)("strong",{parentName:"li"},"Set Password"),'. Provide a password for this user. For our use case, as a tutorial, you can leave "Temporary" set to "Off".'),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Save")," and confirm the password by clicking ",(0,o.kt)("strong",{parentName:"li"},"Save password"))))}r.isMDXComponent=!0},47842:function(e,t,a){a.d(t,{ZP:function(){return r}});var n=a(83117),o=(a(67294),a(3905));const i={toc:[{value:"OIDC Config",id:"oidc-config",level:3}]};function r(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"We need to create a ",(0,o.kt)("a",{parentName:"p",href:"https://www.keycloak.org/docs/latest/server_admin/#con-oidc_server_administration_guide"},"OpenID Connect")," Client in Keycloak for the app to communicate with. Keycloak's ",(0,o.kt)("a",{parentName:"p",href:"https://www.keycloak.org/docs/latest/server_admin/#_oidc_clients"},"docs")," provide steps for how to create an OIDC client and all the various configurations that can be introduced. Follow the steps below to create a client and get the right information necessary for app configuration."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Open the Admin UI by clicking ",(0,o.kt)("strong",{parentName:"p"},"Open Console")," in the Phase Two Dashboard.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click ",(0,o.kt)("strong",{parentName:"p"},"Clients")," in the menu.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click ",(0,o.kt)("strong",{parentName:"p"},"Create client"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Leave ",(0,o.kt)("strong",{parentName:"p"},"Client type")," set to ",(0,o.kt)("strong",{parentName:"p"},"OpenID Connect"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Enter a ",(0,o.kt)("strong",{parentName:"p"},"Client ID"),". This ID is an alphanumeric string that is used in OIDC requests and in the Keycloak database to identify the client.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Supply a ",(0,o.kt)("strong",{parentName:"p"},"Name")," for the client.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click ",(0,o.kt)("strong",{parentName:"p"},"Next"),"."),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{src:a(26212).Z,width:"3000",height:"2072"}))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Under the Capability Config section, leave the defaults as selected. This can be configured further later."),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Client authentication to On."),(0,o.kt)("li",{parentName:"ul"},"Authorization to Off."),(0,o.kt)("li",{parentName:"ul"},"Standard flow checked. Direct access grants checked. All other items unchecked."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click ",(0,o.kt)("strong",{parentName:"p"},"Next"),"."),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{src:a(74669).Z,width:"3000",height:"1909"}))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Under Login settings we need to add a redirect URI and Web origin in order. Assuming you are using the example applicaiton:"),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"Valid redirect URI")," (allows redirect back to application)"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"http://localhost:3000/*\n")),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("em",{parentName:"p"},"Web origins")," (allows for Token auth call)"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"http://localhost:3000\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"URI and Origin Details"),(0,o.kt)("p",{parentName:"li"},"The choice of ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost")," is arbitrary. If you are using an example application running locally, this will apply. If you are using an app that you actually have deployed somewhere, then you will need to substitute the appropriate URI for that."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click ",(0,o.kt)("strong",{parentName:"p"},"Save")),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{src:a(1375).Z,width:"3000",height:"2074"})))),(0,o.kt)("h3",{id:"oidc-config"},"OIDC Config"),(0,o.kt)("p",null,"We will need values to configure our application. To get these values follow the instructions below."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click ",(0,o.kt)("strong",{parentName:"p"},"Clients")," in the menu.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Find the Client you just created and click on it. In the top right click the ",(0,o.kt)("strong",{parentName:"p"},"Action")," dropdown and select ",(0,o.kt)("strong",{parentName:"p"},"Download adapter config"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Select ",(0,o.kt)("strong",{parentName:"p"},"Keycloak OIDC JSON")," in the format option. The details section will populate with the details we will need."),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Note the ",(0,o.kt)("inlineCode",{parentName:"li"},"realm"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"auth-server-url"),", and ",(0,o.kt)("inlineCode",{parentName:"li"},"resource")," values.")),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{src:a(69245).Z,width:"3000",height:"2081"}))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"You also need to copy the ",(0,o.kt)("strong",{parentName:"p"},"Client secret")," in the ",(0,o.kt)("strong",{parentName:"p"},"Credential")," tab for the client to use. Once on the Credential tab, click the copy button to copy the key to your clipboard. Save the key somewhere for use later in this tutorial"),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{src:a(20477).Z,width:"3492",height:"2212"})))))}r.isMDXComponent=!0},77546:function(e,t,a){a.d(t,{ZP:function(){return r}});var n=a(83117),o=(a(67294),a(3905));const i={toc:[]};function r(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you already have a functioning Keycloak instance, you can skip to the next section.")),(0,o.kt)("p",null,'Rather than trying to set up a "from scratch" instance of Keycloak, we\'re going to short-circuit that process by leveraging a free ',(0,o.kt)("a",{parentName:"p",href:"https://phasetwo.io/"},"Phase Two Starter")," instance. The Starter provides a free hosted instance of Phase Two's enhanced Keycloak ready for light production use cases."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Visit the sign-up ",(0,o.kt)("a",{parentName:"p",href:"https://phasetwo.io/dashboard/"},"page"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Enter an email, use a Github account, or use an existing Google account to register."),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{src:a(70618).Z,width:"3000",height:"1763"}))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Follow the register steps. This will include a sign-in link being sent to your email. Use that for password-less login."),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{src:a(61175).Z,width:"3000",height:"857"}))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"After creating an account, a ",(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=ZTFlc-3pG1M"},"realm")," is automatically created for you with all of the Phase Two enhancements. You need to create a Deployment in the Shared Phase Two infrastructure in order to gain access to the realm. Without a deployment created, the Create Shared Deployment modal will automatically pop up.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'Create a Shared Deployment by providing a region (pick something close to your existing infrastructure), a name for the deployment, and selecting the default organization that was created for you upon account creation. Hit "Confirm" when ready. Standby while our robots get to work generating your deployment. This can take a few seconds.'),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{src:a(22983).Z,width:"3000",height:"1541"}))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'After the deployment is created and active, you can access the Keycloak Admin console by clicking "Open Console" for that deployment. Open it now to see the console.'),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{src:a(52787).Z,width:"3000",height:"1311"})))),(0,o.kt)("p",null,"At this point, move on to the next step in the tutorial. We'll be coming back to the Admin Console when its time to start connecting our App to the Keycloak instance."))}r.isMDXComponent=!0},77995:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var n=a(83117),o=(a(67294),a(3905)),i=a(77546),r=a(47842),l=a(6062);const s={slug:"secure-django",title:"Django Web Authentication with Keycloak",author:"Phase Two",tags:["phase_two","tutorial","frameworks","django"]},p=void 0,c={permalink:"/blog/secure-django",source:"@site/blog/2023-08-31-secure-django.mdx",title:"Django Web Authentication with Keycloak",description:"Django is a high-level, open-source web framework for building web applications using the Python programming language. It follows the Model-View-Controller (MVC) architectural pattern.",date:"2023-08-31T00:00:00.000Z",formattedDate:"August 31, 2023",tags:[{label:"phase_two",permalink:"/blog/tags/phase-two"},{label:"tutorial",permalink:"/blog/tags/tutorial"},{label:"frameworks",permalink:"/blog/tags/frameworks"},{label:"django",permalink:"/blog/tags/django"}],readingTime:5.425,hasTruncateMarker:!1,authors:[{name:"Phase Two"}],frontMatter:{slug:"secure-django",title:"Django Web Authentication with Keycloak",author:"Phase Two",tags:["phase_two","tutorial","frameworks","django"]},prevItem:{title:"Securing Nuxt Apps with Keycloak",permalink:"/blog/instant-user-managemenet-and-sso-for-nuxt"},nextItem:{title:"Securing Next.js Apps with Keycloak",permalink:"/blog/instant-user-managemenet-and-sso-for-nextjs"}},u={authorsImageUrls:[void 0]},m=[{value:"Setting up a Django Project",id:"setting-up-a-django-project",level:2},{value:"Quick Start",id:"quick-start",level:3},{value:"Setting up a Keycloak Instance",id:"setting-up-a-keycloak-instance",level:2},{value:"Setting up an OIDC Client",id:"setting-up-an-oidc-client",level:2},{value:"Adding a Non-Admin User",id:"adding-a-non-admin-user",level:2},{value:"Install and configure the Django OIDC library",id:"install-and-configure-the-django-oidc-library",level:2},{value:"Using it in your app",id:"using-it-in-your-app",level:2},{value:"Protect your views",id:"protect-your-views",level:3},{value:"Accessing user information",id:"accessing-user-information",level:3},{value:"Use Username rather than Email",id:"use-username-rather-than-email",level:4},{value:"Logging out",id:"logging-out",level:3},{value:"Add support for Django Rest Framework",id:"add-support-for-django-rest-framework",level:2},{value:"Learning more",id:"learning-more",level:2}],d={toc:m};function h(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.djangoproject.com/"},"Django")," is a high-level, open-source web framework for building web applications using the Python programming language. It follows the Model-View-Controller (MVC) architectural pattern."),(0,o.kt)("p",null,"In this article we'll be using ",(0,o.kt)("a",{parentName:"p",href:"https://www.keycloak.org/"},"Keycloak")," to secure a Django Web application."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If you just want to skip to the code, visit the Phase Two ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/p2-inc/examples/tree/main/frameworks/django"},"Django example"),". We are also building ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/p2-inc/examples"},"Keycloak examples")," for other frameworks.")),(0,o.kt)("h2",{id:"setting-up-a-django-project"},"Setting up a Django Project"),(0,o.kt)("p",null,"The following could be applied to an existing Django application, but we have chosen to use the excellent tutorial application built by ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django"},"Mozilla")," as our example. If you aren't yet familiar with Django, we encourage you to follow the tutorial there."),(0,o.kt)("p",null,"The completed code for that tutorial is available in their GitHub repository. We'll clone it to get started."),(0,o.kt)("h3",{id:"quick-start"},"Quick Start"),(0,o.kt)("p",null,"To get this project up and running locally on your computer:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Set up the ",(0,o.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/development_environment"},"Python development environment"),".\nWe recommend using a Python virtual environment."),(0,o.kt)("li",{parentName:"ol"},"Assuming you have Python setup, run the following commands (if you're on Windows you may use ",(0,o.kt)("inlineCode",{parentName:"li"},"py")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"py -3")," instead of ",(0,o.kt)("inlineCode",{parentName:"li"},"python")," to start Python):",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"pip install -r requirements.txt\npython manage.py makemigrations\npython manage.py migrate\npython manage.py collectstatic\npython manage.py test # Run the standard tests. These should all pass.\npython manage.py createsuperuser # Create a superuser\npython manage.py runserver\n"))),(0,o.kt)("li",{parentName:"ol"},"Open a browser to ",(0,o.kt)("inlineCode",{parentName:"li"},"http://127.0.0.1:8000/admin/")," to open the admin site"),(0,o.kt)("li",{parentName:"ol"},"Create a few test objects of each type."),(0,o.kt)("li",{parentName:"ol"},"Open tab to ",(0,o.kt)("inlineCode",{parentName:"li"},"http://127.0.0.1:8000")," to see the main site, with your new objects.")),(0,o.kt)("h2",{id:"setting-up-a-keycloak-instance"},"Setting up a Keycloak Instance"),(0,o.kt)("p",null,"Before customizing the Django app, we need to set up and configure our Keycloak instance."),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Instructions"),(0,o.kt)(i.ZP,{mdxType:"PhaseTwoStarterInstructions"})),(0,o.kt)("h2",{id:"setting-up-an-oidc-client"},"Setting up an OIDC Client"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Instructions"),(0,o.kt)(r.ZP,{mdxType:"OIDC"})),(0,o.kt)("h2",{id:"adding-a-non-admin-user"},"Adding a Non-Admin User"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Instructions"),(0,o.kt)(l.ZP,{mdxType:"NonAdminUser"})),(0,o.kt)("h2",{id:"install-and-configure-the-django-oidc-library"},"Install and configure the Django OIDC library"),(0,o.kt)("p",null,"Now that we've installed and configured Keycloak, we need to setup Django to replace the native authentication method provided by the framework. The first task is to install a library that is compatible with Keycloak's OIDC implementation."),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://mozilla-django-oidc.readthedocs.io/"},"mozilla-django-oidc")," library provides an easy way to integrate Keycloak (or any OpenID Connect-compliant identity provider) with your Django app. It abstracts many of the complexities of integrating authentication and authorization. Here's how you can set it up:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Install the Package"),":\nInstall the ",(0,o.kt)("inlineCode",{parentName:"p"},"mozilla-django-oidc")," package using pip:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pip install mozilla-django-oidc\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Configure Django Settings"),":\nUpdate your Django app's ",(0,o.kt)("inlineCode",{parentName:"p"},"settings.py")," to include the necessary configurations for ",(0,o.kt)("inlineCode",{parentName:"p"},"mozilla-django-oidc"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"INSTALLED_APPS = [\n    # ...\n    'django.contrib.auth',\n    'mozilla_django_oidc',  # Load after django.contrib.auth\n    # ...\n]\n\nAUTHENTICATION_BACKENDS = (\n    'mozilla_django_oidc.auth.OIDCAuthenticationBackend',\n    # ...\n)\n\nOIDC_RP_CLIENT_ID = 'your-client-id'\nOIDC_RP_CLIENT_SECRET = 'your-client-secret'\nOIDC_OP_AUTHORIZATION_ENDPOINT = 'https://keycloak-url/auth/realms/your-realm/protocol/openid-connect/auth'\nOIDC_OP_TOKEN_ENDPOINT = 'https://keycloak-url/auth/realms/your-realm/protocol/openid-connect/token'\nOIDC_OP_USER_ENDPOINT = 'https://keycloak-url/auth/realms/your-realm/protocol/openid-connect/userinfo'\nOIDC_OP_JWKS_ENDPOINT = 'https://keycloak-url/auth/realms/your-realm/protocol/openid-connect/certs'\nOIDC_RP_SIGN_ALGO = 'RS256'\n\nLOGIN_URL = 'oidc_authentication_init'\nLOGOUT_REDIRECT_URL = '/'\nLOGIN_REDIRECT_URL = '/'\n")),(0,o.kt)("p",{parentName:"li"},"Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"your-client-id"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"your-client-secret"),", and the Keycloak URLs with your actual Keycloak configurations.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Add URLs"),":\nUpdate your Django app's ",(0,o.kt)("inlineCode",{parentName:"p"},"urls.py")," to include the authentication URLs provided by ",(0,o.kt)("inlineCode",{parentName:"p"},"mozilla-django-oidc"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"urlpatterns += [\n    path('oidc/', include('mozilla_django_oidc.urls')),\n]\n")))),(0,o.kt)("h2",{id:"using-it-in-your-app"},"Using it in your app"),(0,o.kt)("h3",{id:"protect-your-views"},"Protect your views"),(0,o.kt)("p",null,"Use Decorators for Access Control. You can now use the ",(0,o.kt)("inlineCode",{parentName:"p"},"@oidc_protected")," decorator to protect views that require authentication and potentially specific roles:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from mozilla_django_oidc.decorators import oidc_protected\n\n@oidc_protected\ndef protected_view(request):\n    # Your view logic\n")),(0,o.kt)("h3",{id:"accessing-user-information"},"Accessing user information"),(0,o.kt)("p",null,"You can access user information after authentication using the ",(0,o.kt)("inlineCode",{parentName:"p"},"request.oidc_user")," attribute. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def profile_view(request):\n    user_info = request.oidc_user.userinfo\n    # Access user_info['sub'], user_info['email'], etc.\n    # Your view logic\n")),(0,o.kt)("p",null,"By default, ",(0,o.kt)("inlineCode",{parentName:"p"},"mozilla-django-oidc")," looks up a Django user matching the email field to the email address returned in the user info data from Keycloak."),(0,o.kt)("p",null,"If a user logs into your site and doesn\u2019t already have an account, by default, ",(0,o.kt)("inlineCode",{parentName:"p"},"mozilla-django-oidc")," will create a new Django user account. It will create the User instance filling in the username (hash of the email address) and email fields."),(0,o.kt)("h4",{id:"use-username-rather-than-email"},"Use Username rather than Email"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"mozilla-django-oidc")," defaults to setting up Django users using the email address as the user name from keycloak was required. Fortunately, ",(0,o.kt)("inlineCode",{parentName:"p"},"preferred_username")," is set up by default in Keycloak as a claim. The claim can used by overriding the ",(0,o.kt)("inlineCode",{parentName:"p"},"OIDCAuthenticationBackend")," class in ",(0,o.kt)("inlineCode",{parentName:"p"},"mozilla_django_oidc.auth")," and referring to this in ",(0,o.kt)("inlineCode",{parentName:"p"},"AUTHENTICATION_BACKENDS")," as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"\n# Classes to override default OIDCAuthenticationBackend (Keycloak authentication)\nfrom mozilla_django_oidc.auth import OIDCAuthenticationBackend\n\nclass KeycloakOIDCAuthenticationBackend(OIDCAuthenticationBackend):\n\n def create_user(self, claims):\n     \"\"\" Overrides Authentication Backend so that Django users are\n         created with the keycloak preferred_username.\n         If nothing found matching the email, then try the username.\n     \"\"\"\n     user = super(KeycloakOIDCAuthenticationBackend, self).create_user(claims)\n     user.first_name = claims.get('given_name', '')\n     user.last_name = claims.get('family_name', '')\n     user.email = claims.get('email')\n     user.username = claims.get('preferred_username')\n     user.save()\n     return user\n\n def filter_users_by_claims(self, claims):\n     \"\"\" Return all users matching the specified email.\n         If nothing found matching the email, then try the username\n     \"\"\"\n     email = claims.get('email')\n     preferred_username = claims.get('preferred_username')\n\n     if not email:\n         return self.UserModel.objects.none()\n     users = self.UserModel.objects.filter(email__iexact=email)\n\n     if len(users) < 1:\n         if not preferred_username:\n             return self.UserModel.objects.none()\n         users = self.UserModel.objects.filter(username__iexact=preferred_username)\n     return users\n\n def update_user(self, user, claims):\n     user.first_name = claims.get('given_name', '')\n     user.last_name = claims.get('family_name', '')\n     user.email = claims.get('email')\n     user.username = claims.get('preferred_username')\n     user.save()\n     return user\n")),(0,o.kt)("p",null,"In settings.py, overide the new library you have just added in AUTHENTICATION_BACKENDS :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},' # mozilla_django_oidc - Keycloak authentication\n "fragalysis.auth.KeycloakOIDCAuthenticationBackend",\n')),(0,o.kt)("h3",{id:"logging-out"},"Logging out"),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"@oidc_logout")," decorator to log the user out of both your app and Keycloak:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from mozilla_django_oidc.decorators import oidc_logout\n\n@oidc_logout\ndef logout_view(request):\n    # Your logout view logic\n")),(0,o.kt)("h2",{id:"add-support-for-django-rest-framework"},"Add support for Django Rest Framework"),(0,o.kt)("p",null,"Django Rest Framework (DRF) is a flexible toolkit built on top of Django, specifically designed for building RESTful APIs."),(0,o.kt)("p",null,"If you want DRF to authenticate users based on an OAuth access token provided in the Authorization header, you can use the DRF-specific authentication class which ships with the package."),(0,o.kt)("p",null,"Add this to your settings:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'mozilla_django_oidc.contrib.drf.OIDCAuthentication',\n        'rest_framework.authentication.SessionAuthentication',\n        # other authentication classes, if needed\n    ],\n}\n")),(0,o.kt)("p",null,"Note that this only takes care of authenticating against an access token, and provides no options to create or renew tokens."),(0,o.kt)("p",null,"If you\u2019ve created a custom Django OIDCAuthenticationBackend and added that to your AUTHENTICATION_BACKENDS, the DRF class should be smart enough to figure that out. Alternatively, you can manually set the OIDC backend to use:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"OIDC_DRF_AUTH_BACKEND = 'mozilla_django_oidc.auth.OIDCAuthenticationBackend'\n")),(0,o.kt)("h2",{id:"learning-more"},"Learning more"),(0,o.kt)("p",null,"Phase Two's enhanced Keycloak provides many ways to quickly control and tweak the log in and user management experience. Our ",(0,o.kt)("a",{parentName:"p",href:"https://phasetwo.io/blog"},"blog")," has many use cases from ",(0,o.kt)("a",{parentName:"p",href:"https://phasetwo.io/blog/customizing-login-pages"},"customizing login pages"),", setting up ",(0,o.kt)("a",{parentName:"p",href:"https://phasetwo.io/blog/set-up-magic-links"},"magic links")," (password-less sign in), and ",(0,o.kt)("a",{parentName:"p",href:"https://phasetwo.io/product/organizations"},"Organization")," workflows."))}h.isMDXComponent=!0},69245:function(e,t,a){t.Z=a.p+"assets/images/adapter-config-c561561514672a51754146ff56e6bbe3.png"},74669:function(e,t,a){t.Z=a.p+"assets/images/capability-config-with-auth-cdb9c0e4d816fd1b345a2b4f0ad31fea.png"},20477:function(e,t,a){t.Z=a.p+"assets/images/copy-credential-c9822fe7c52d15c588ca6661aa2416fd.png"},26212:function(e,t,a){t.Z=a.p+"assets/images/general-settings-0a3265fecd73272214fb1d3d9c4a57a7.png"},1375:function(e,t,a){t.Z=a.p+"assets/images/login-settings-7706affb95f5f93f7490d7b46f9ec1f4.png"},22983:function(e,t,a){t.Z=a.p+"assets/images/create_shared_deployment-a4fc0584f6318f037cf191e06c9703b8.png"},52787:function(e,t,a){t.Z=a.p+"assets/images/deployments-e5cb24a81b832bb19e3adf754c133bf1.png"},61175:function(e,t,a){t.Z=a.p+"assets/images/email_link-cefd0e50772e855bbaa5de46bda7f504.png"},70618:function(e,t,a){t.Z=a.p+"assets/images/register-c45850867ce85096a398bb0dfab9df4d.png"}}]);