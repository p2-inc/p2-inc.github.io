"use strict";(self.webpackChunkphasetwo_docs=self.webpackChunkphasetwo_docs||[]).push([[4372],{91501:function(e,t,a){a.r(t),a.d(t,{assets:function(){return y},contentTitle:function(){return h},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return g}});var n=a(83117),i=(a(67294),a(3905)),o=a(26389),s=a(94891),r=a(75190),p=a(47507),d=a(24310),l=a(63303),m=(a(75035),a(85162));const c={id:"get-organization-domain",title:"Get details for a domain owned by an organization",description:"Get details for a domain owned by an organization",sidebar_label:"Get details for a domain owned by an organization",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Organization Domains"],operationId:"getOrganizationDomain",responses:{200:{description:"success",content:{"application/json":{schema:{type:"object",properties:{domain_name:{type:"string"},verified:{type:"boolean"},record_key:{type:"string"},record_value:{type:"string"},type:{type:"string"}},title:"OrganizationDomainRepresentation"}}}}},description:"Get details for a domain owned by an organization",parameters:[{in:"path",name:"realm",description:"realm name (not id!)",required:!0,schema:{type:"string"},style:"simple"},{in:"path",name:"orgId",description:"organization id",required:!0,schema:{type:"string"},style:"simple"},{in:"path",name:"domainName",description:"domain name",required:!0,schema:{type:"string"},style:"simple"}],method:"get",path:"/{realm}/orgs/{orgId}/domains/{domainName}",servers:[{url:"{protocol}://{host}{port}/auth/realms",variables:{host:{enum:["app.phasetwo.io","localhost"],default:"app.phasetwo.io",description:"API host"},port:{enum:["","8081"],default:"",description:"API port"},protocol:{enum:["http","https"],default:"https"}}}],security:[{access_token:[]}],securitySchemes:{access_token:{type:"http",scheme:"bearer",bearerFormat:""}},info:{title:"Phase Two Admin REST API",description:"This is a REST API reference for the Phase Two Keycloak custom resources. These are extensions to the standard [Keycloak Admin REST API](https://www.keycloak.org/docs-api/17.0/rest-api/index.html).\n\n### Base URI format\nPaths specified in the documentation are relative to the the base URI.\n- Format: `https://<host>:<port>/auth/realms`\n- Example: `https://app.phasetwo.io/auth/realms`\n\n### Authentication\nAuthentication is achieved by using the `Authentication: Bearer <token>` header in all requests. This is either the access token received from a normal authentication, or by a request directly to the OpenID Connect token endpoint.\n\nIt is recommended that you use a Keycloak Admin Client, such as [this one for Javascript](https://github.com/keycloak/keycloak-nodejs-admin-client), as they take care of authentication, getting an access token, and refreshing it when it expires.\n\n#### Client credentials grant example\n```\nPOST /auth/realms/test-realm/protocol/openid-connect/token\nHost: app.phasetwo.io\nAccept: application/json\nContent-type: application/x-www-form-urlencoded\n\ngrant_type=client_credentials&client_id=admin-cli&client_secret=fd649804-3a74-4d69-acaa-8f065c6b7da1\n```\n\n#### Password grant example\n```\nPOST /auth/realms/test-realm/protocol/openid-connect/token\nHost: app.phasetwo.io\nAccept: application/json\nContent-type: application/x-www-form-urlencoded\n\ngrant_type=password&username=uname@foo.com&password=pwd123AZY&client_id=admin-cli\n```\n\n### SDKs\nModern API libraries are available for several common languages. These are available as open source at the links below, or you can choose to generate your own using our [OpenAPI spec file](https://raw.githubusercontent.com/p2-inc/phasetwo-docs/master/openapi.yaml).\n\n| Language | Library |\n| --- | --- |\n| Java (and other JVM langs) | https://github.com/p2-inc/phasetwo-java |\n| JavaScript/TypeScript | https://github.com/p2-inc/phasetwo-js |\n| Python | https://github.com/p2-inc/phasetwo-python |\n",version:"v1"},postman:{name:"Get details for a domain owned by an organization",description:{type:"text/plain"},url:{path:[":realm","orgs",":orgId","domains",":domainName"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) realm name (not id!)",type:"text/plain"},type:"any",value:"",key:"realm"},{disabled:!1,description:{content:"(Required) organization id",type:"text/plain"},type:"any",value:"",key:"orgId"},{disabled:!1,description:{content:"(Required) domain name",type:"text/plain"},type:"any",value:"",key:"domainName"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api/phase-two-admin-rest-api",custom_edit_url:null},h=void 0,u={unversionedId:"get-organization-domain",id:"get-organization-domain",title:"Get details for a domain owned by an organization",description:"Get details for a domain owned by an organization",source:"@site/api/get-organization-domain.api.mdx",sourceDirName:".",slug:"/get-organization-domain",permalink:"/api/get-organization-domain",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"get-organization-domain",title:"Get details for a domain owned by an organization",description:"Get details for a domain owned by an organization",sidebar_label:"Get details for a domain owned by an organization",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Organization Domains"],operationId:"getOrganizationDomain",responses:{200:{description:"success",content:{"application/json":{schema:{type:"object",properties:{domain_name:{type:"string"},verified:{type:"boolean"},record_key:{type:"string"},record_value:{type:"string"},type:{type:"string"}},title:"OrganizationDomainRepresentation"}}}}},description:"Get details for a domain owned by an organization",parameters:[{in:"path",name:"realm",description:"realm name (not id!)",required:!0,schema:{type:"string"},style:"simple"},{in:"path",name:"orgId",description:"organization id",required:!0,schema:{type:"string"},style:"simple"},{in:"path",name:"domainName",description:"domain name",required:!0,schema:{type:"string"},style:"simple"}],method:"get",path:"/{realm}/orgs/{orgId}/domains/{domainName}",servers:[{url:"{protocol}://{host}{port}/auth/realms",variables:{host:{enum:["app.phasetwo.io","localhost"],default:"app.phasetwo.io",description:"API host"},port:{enum:["","8081"],default:"",description:"API port"},protocol:{enum:["http","https"],default:"https"}}}],security:[{access_token:[]}],securitySchemes:{access_token:{type:"http",scheme:"bearer",bearerFormat:""}},info:{title:"Phase Two Admin REST API",description:"This is a REST API reference for the Phase Two Keycloak custom resources. These are extensions to the standard [Keycloak Admin REST API](https://www.keycloak.org/docs-api/17.0/rest-api/index.html).\n\n### Base URI format\nPaths specified in the documentation are relative to the the base URI.\n- Format: `https://<host>:<port>/auth/realms`\n- Example: `https://app.phasetwo.io/auth/realms`\n\n### Authentication\nAuthentication is achieved by using the `Authentication: Bearer <token>` header in all requests. This is either the access token received from a normal authentication, or by a request directly to the OpenID Connect token endpoint.\n\nIt is recommended that you use a Keycloak Admin Client, such as [this one for Javascript](https://github.com/keycloak/keycloak-nodejs-admin-client), as they take care of authentication, getting an access token, and refreshing it when it expires.\n\n#### Client credentials grant example\n```\nPOST /auth/realms/test-realm/protocol/openid-connect/token\nHost: app.phasetwo.io\nAccept: application/json\nContent-type: application/x-www-form-urlencoded\n\ngrant_type=client_credentials&client_id=admin-cli&client_secret=fd649804-3a74-4d69-acaa-8f065c6b7da1\n```\n\n#### Password grant example\n```\nPOST /auth/realms/test-realm/protocol/openid-connect/token\nHost: app.phasetwo.io\nAccept: application/json\nContent-type: application/x-www-form-urlencoded\n\ngrant_type=password&username=uname@foo.com&password=pwd123AZY&client_id=admin-cli\n```\n\n### SDKs\nModern API libraries are available for several common languages. These are available as open source at the links below, or you can choose to generate your own using our [OpenAPI spec file](https://raw.githubusercontent.com/p2-inc/phasetwo-docs/master/openapi.yaml).\n\n| Language | Library |\n| --- | --- |\n| Java (and other JVM langs) | https://github.com/p2-inc/phasetwo-java |\n| JavaScript/TypeScript | https://github.com/p2-inc/phasetwo-js |\n| Python | https://github.com/p2-inc/phasetwo-python |\n",version:"v1"},postman:{name:"Get details for a domain owned by an organization",description:{type:"text/plain"},url:{path:[":realm","orgs",":orgId","domains",":domainName"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) realm name (not id!)",type:"text/plain"},type:"any",value:"",key:"realm"},{disabled:!1,description:{content:"(Required) organization id",type:"text/plain"},type:"any",value:"",key:"orgId"},{disabled:!1,description:{content:"(Required) domain name",type:"text/plain"},type:"any",value:"",key:"domainName"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api/phase-two-admin-rest-api",custom_edit_url:null},sidebar:"api",previous:{title:"Get details for all domains owned by an organization",permalink:"/api/get-organization-domains"},next:{title:"Start domain verification",permalink:"/api/verify-domain"}},y={},g=[{value:"Get details for a domain owned by an organization",id:"get-details-for-a-domain-owned-by-an-organization",level:2}],b={toc:g};function f(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"get-details-for-a-domain-owned-by-an-organization"},"Get details for a domain owned by an organization"),(0,i.kt)("p",null,"Get details for a domain owned by an organization"),(0,i.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"Path Parameters")),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)(r.Z,{className:"paramsItem",param:{in:"path",name:"realm",description:"realm name (not id!)",required:!0,schema:{type:"string"},style:"simple"},mdxType:"ParamsItem"}),(0,i.kt)(r.Z,{className:"paramsItem",param:{in:"path",name:"orgId",description:"organization id",required:!0,schema:{type:"string"},style:"simple"},mdxType:"ParamsItem"}),(0,i.kt)(r.Z,{className:"paramsItem",param:{in:"path",name:"domainName",description:"domain name",required:!0,schema:{type:"string"},style:"simple"},mdxType:"ParamsItem"})))),(0,i.kt)("div",null,(0,i.kt)(o.Z,{mdxType:"ApiTabs"},(0,i.kt)(m.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"success")),(0,i.kt)("div",null,(0,i.kt)(s.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(m.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(l.Z,{mdxType:"SchemaTabs"},(0,i.kt)(m.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(d.Z,{collapsible:!1,name:"domain_name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"verified",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"record_key",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"record_value",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(d.Z,{collapsible:!1,name:"type",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,i.kt)(m.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(p.Z,{responseExample:'{\n  "domain_name": "string",\n  "verified": true,\n  "record_key": "string",\n  "record_value": "string",\n  "type": "string"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}f.isMDXComponent=!0}}]);