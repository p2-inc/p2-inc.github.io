"use strict";(self.webpackChunkphasetwo_docs=self.webpackChunkphasetwo_docs||[]).push([[915],{23839:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var s=t(74848),i=t(28453);const o={id:"next",title:"Next.js"},r=void 0,c={id:"securing-applications/next",title:"Next.js",description:"This example uses Next.js 13 and splits server and client components accordingly.",source:"@site/docs/securing-applications/next.md",sourceDirName:"securing-applications",slug:"/securing-applications/next",permalink:"/docs/securing-applications/next",draft:!1,unlisted:!1,editUrl:"https://github.com/p2-inc/phasetwo-docs/tree/main/docs/securing-applications/next.md",tags:[],version:"current",frontMatter:{id:"next",title:"Next.js"},sidebar:"docs",previous:{title:"React",permalink:"/docs/securing-applications/react"},next:{title:"Vue.js",permalink:"/docs/securing-applications/vue"}},a={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["This example uses ",(0,s.jsx)(n.a,{href:"https://nextjs.org/",children:"Next.js"})," 13 and splits ",(0,s.jsx)(n.code,{children:"server"})," and ",(0,s.jsx)(n.code,{children:"client"})," components accordingly."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Clone the Phase Two ",(0,s.jsx)(n.a,{href:"https://github.com/p2-inc/examples/",children:"example repo"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open the Next.js ",(0,s.jsx)(n.a,{href:"https://github.com/p2-inc/examples/tree/main/frameworks/nextjs",children:"folder"})," within ",(0,s.jsx)(n.code,{children:"/frameworks/nextjs"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Run ",(0,s.jsx)(n.code,{children:"npm install"})," and then ",(0,s.jsx)(n.code,{children:"npm run dev"}),". This example leverages ",(0,s.jsx)(n.a,{href:"https://next-auth.js.org/",children:"NextAuth.js"})," to provide hook and HOC support."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["NextAuth.js configures an API route that is uses for the Authentication of the Client. It generates the routes automatically for you. These are added to Next.js in the ",(0,s.jsx)(n.code,{children:"api/auth/[...nextauth]/route.ts"})," file."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open the ",(0,s.jsx)(n.code,{children:"src/lib/auth.ts"})," file. This is a server only file. We will be updating a few values from the prior section where we set up our OIDC client. Taking the values from the OIDC Client Config section, set those values in the code. While it is recommended to use Environment variables for the secret, for the purpose of this tutorial, paste in the ",(0,s.jsx)(n.strong,{children:"Client secret"})," from the OIDC client creation section for the value of ",(0,s.jsx)(n.code,{children:"clientSecret"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const authServerUrl = "https://euc1.auth.ac/auth/";\nconst realm = "shared-deployment-001";\nconst clientId = "reg-example-1";\nconst clientSecret = "CLIENT_SECRET"; // Paste "Client secret" here. Use Environment variables in prod\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Those are used to popluate the ",(0,s.jsx)(n.code,{children:"AuthOptions"})," config for the ",(0,s.jsx)(n.code,{children:"KeycloakProvider"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export const AuthOptions: NextAuthOptions = {\n  providers: [\n    KeycloakProvider({\n      clientId,\n      clientSecret,\n      issuer: `${authServerUrl}realms/${realm}`,\n    }),\n  ],\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The config is then provided to the ",(0,s.jsx)(n.code,{children:"AuthProvider"})," in the ",(0,s.jsx)(n.code,{children:"/src/app/layout.tsx"})," file. Next.js uses this file to generate an HTML view for this page."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'import { NextAuthProvider as AuthProvider } from "./providers";\n...\n<AuthProvider {...oidcConfig}>\n  <App />\n</AuthProvider>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["At this point our entire application will be able to access all information and methods needed to perform authentication. View the ",(0,s.jsx)(n.code,{children:"providers.tsx"})," file for additional information about how the ",(0,s.jsx)(n.code,{children:"SessionProvider"})," is used. The ",(0,s.jsx)(n.code,{children:"SessionProvider"})," enables use of Hooks to derive the authenticated state. View ",(0,s.jsx)(n.code,{children:"user.component.tsx"}),' for exactly how the code is authenticating your user. The sections rendering the "Log in" and "Log out" buttons are conditional areas based on the authenticated context. The buttons invoke functions provided by NextAuth.']}),"\n",(0,s.jsx)(n.p,{children:"The logic using the hook to conditionally determine the Authenticated state, can be used to secure routes, components, and more."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open ",(0,s.jsx)(n.a,{href:"http://localhost:3000",children:"localhost:3000"}),'. You will see the Phase Two example landing page. You current state should be "Not authenticated". Click ',(0,s.jsx)(n.strong,{children:"Log In"}),". This will redirect you to your login page."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Use the non-admin user created in the previous section to sign in."})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Enter the credentials of the non-admin user you created. Click ",(0,s.jsx)(n.strong,{children:"Submit"}),'. You will then be redirected to the application. The Phase Two example landing page now loads your "Authenticated" state, displaying your user\'s email and their Token.']}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["After your first log in, click ",(0,s.jsx)(n.strong,{children:"Log out"}),". Then click ",(0,s.jsx)(n.strong,{children:"Log in"})," again. Notice how this time you will not be redirected to sign in as your state is already in the browser. Neat! If you clear the browser state for that tab, then you will have to be redirected away to sign-in again."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(96540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);