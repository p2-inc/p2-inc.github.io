"use strict";(self.webpackChunkphasetwo_docs=self.webpackChunkphasetwo_docs||[]).push([[9054],{97064:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var a=o(46324),n=o(74848),i=o(28453);const s={slug:"securing-apps-with-keycloak",title:"Secure Your Application With Keycloak",description:"Enabling Authentication and Authorization on your Application using open source Keycloak to provide better security",authors:"phasetwo",tags:["tutorial","keycloak","phase_two","sso","authentication","authorization"]},r=void 0,l={authorsImageUrls:[void 0]},c=[];function u(t){const e={p:"p",...(0,i.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:"There are a lot of guides out there, official and unofficial, for how to secure applications with Keycloak. The subject is rather broad, so it's difficult to know where to start. To begin, we'll be focusing on Keycloak's use of OpenID Connect (OIDC), and how to use that standard, along with some helpful libraries, to secure a simple but instructive application."}),"\n",(0,n.jsx)(e.p,{children:"For the purposes of the sample, we'll actually be using two common applications, a frontend single-page application (SPA) written in JavaScript, and a backend REST API written for Node.js. The language we selected for the sample is JavaScript, but the principles apply no matter the implementation technology you choose."})]})}function p(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(u,{...t})}):u(t)}},28453:(t,e,o)=>{o.d(e,{R:()=>s,x:()=>r});var a=o(96540);const n={},i=a.createContext(n);function s(t){const e=a.useContext(i);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:s(t.components),a.createElement(i.Provider,{value:e},t.children)}},46324:t=>{t.exports=JSON.parse('{"permalink":"/blog/securing-apps-with-keycloak","source":"@site/blog/2022-10-17-securing-apps-with-keycloak.md","title":"Secure Your Application With Keycloak","description":"Enabling Authentication and Authorization on your Application using open source Keycloak to provide better security","date":"2022-10-17T00:00:00.000Z","tags":[{"inline":true,"label":"tutorial","permalink":"/blog/tags/tutorial"},{"inline":true,"label":"keycloak","permalink":"/blog/tags/keycloak"},{"inline":true,"label":"phase_two","permalink":"/blog/tags/phase-two"},{"inline":true,"label":"sso","permalink":"/blog/tags/sso"},{"inline":true,"label":"authentication","permalink":"/blog/tags/authentication"},{"inline":true,"label":"authorization","permalink":"/blog/tags/authorization"}],"readingTime":5.94,"hasTruncateMarker":true,"authors":[{"name":"Phase Two","title":"Hosted Keycloak and Keycloak Support","url":"https://github.com/p2-inc","email":"support@phasetwo.io","imageURL":"https://avatars.githubusercontent.com/u/60152109?s=200&v=4","key":"phasetwo","page":null}],"frontMatter":{"slug":"securing-apps-with-keycloak","title":"Secure Your Application With Keycloak","description":"Enabling Authentication and Authorization on your Application using open source Keycloak to provide better security","authors":"phasetwo","tags":["tutorial","keycloak","phase_two","sso","authentication","authorization"]},"unlisted":false,"prevItem":{"title":"Setting up SSO with Phase Two and Keycloak","permalink":"/blog/sso-setup"},"nextItem":{"title":"Magic Links Guide, and 5 Minute Setup for Open Source Passwordless Authentication and Better Security","permalink":"/blog/set-up-magic-links"}}')}}]);