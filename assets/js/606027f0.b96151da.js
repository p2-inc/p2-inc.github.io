"use strict";(self.webpackChunkphasetwo_docs=self.webpackChunkphasetwo_docs||[]).push([[8772],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8588:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return l}});var a=n(83117),r=(n(67294),n(3905));const o={id:"access",title:"Access"},i=void 0,c={unversionedId:"audit-logs/access",id:"audit-logs/access",title:"Access",description:"Phase Two records access event types that pertain to end users use of the Phase Two and customer systems. These are primarily registration, login and account management actions.",source:"@site/docs/audit-logs/access.md",sourceDirName:"audit-logs",slug:"/audit-logs/access",permalink:"/docs/audit-logs/access",draft:!1,editUrl:"https://github.com/p2-inc/phasetwo-docs/tree/main/docs/audit-logs/access.md",tags:[],version:"current",frontMatter:{id:"access",title:"Access"},sidebar:"docs",previous:{title:"Audit Logs",permalink:"/docs/audit-logs/"},next:{title:"Admin",permalink:"/docs/audit-logs/admin"}},s={},l=[{value:"Example",id:"example",level:2},{value:"Event types",id:"event-types",level:2},{value:"Login events",id:"login-events",level:3},{value:"Account events",id:"account-events",level:3}],u={toc:l};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Phase Two records access event types that pertain to end users use of the Phase Two and customer systems. These are primarily registration, login and account management actions. "),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"The following is an example of the detail contained in an ",(0,r.kt)("inlineCode",{parentName:"p"},"access.LOGIN")," event:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "uid": "8d76de08-1c12-4d9a-bb86-fd1c602b2486",\n  "time": 1588363619462,\n  "realmId": "customer.app",\n  "type": "access.LOGIN",\n  "authDetails": {\n    "realmId": "customer.app",\n    "clientId": "web-app",\n    "userId": "f7cd3491-7c6c-480c-bc5c-b2b3b0fb048c",\n    "ipAddress": "78.195.109.209",\n    "username": "johndoe",\n    "sessionId": "70c446c9-ed9a-4c9e-9a72-d26363bb4000"\n  },\n  "details": {\n    "auth_method": "openid-connect",\n    "redirect_uri": "https://customer.com/dashboard",\n    "consent": "no_consent_required",\n    "code_id": "70c446c9-ed9a-4c9e-9a72-d26363bb4000",\n    "username": "johndoe"\n  }\n}\n')),(0,r.kt)("p",null,"Field definitions can be viewed in the ",(0,r.kt)("a",{parentName:"p",href:"api"},"API documentation"),"."),(0,r.kt)("h2",{id:"event-types"},"Event types"),(0,r.kt)("p",null,"All access event types are indicated in the ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," field of the json event with the ",(0,r.kt)("inlineCode",{parentName:"p"},"access.")," prefix. "),(0,r.kt)("h3",{id:"login-events"},"Login events"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"LOGIN - A user has logged in."),(0,r.kt)("li",{parentName:"ul"},"REGISTER - A user has registered."),(0,r.kt)("li",{parentName:"ul"},"LOGOUT - A user has logged out."),(0,r.kt)("li",{parentName:"ul"},"CODE_TO_TOKEN - An application/client has exchanged a code for a token."),(0,r.kt)("li",{parentName:"ul"},"REFRESH_TOKEN - An application/client has refreshed a token.")),(0,r.kt)("h3",{id:"account-events"},"Account events"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"SOCIAL_LINK - An account has been linked to a social provider."),(0,r.kt)("li",{parentName:"ul"},"REMOVE_SOCIAL_LINK - A social provider has been removed from an account."),(0,r.kt)("li",{parentName:"ul"},"UPDATE_EMAIL - The email address for an account has changed."),(0,r.kt)("li",{parentName:"ul"},"UPDATE_PROFILE - The profile for an account has changed."),(0,r.kt)("li",{parentName:"ul"},"SEND_RESET_PASSWORD - A password reset email has been sent."),(0,r.kt)("li",{parentName:"ul"},"UPDATE_PASSWORD - The password for an account has changed."),(0,r.kt)("li",{parentName:"ul"},"UPDATE_TOTP - The TOTP settings for an account have changed."),(0,r.kt)("li",{parentName:"ul"},"REMOVE_TOTP - TOTP has been removed from an account."),(0,r.kt)("li",{parentName:"ul"},"SEND_VERIFY_EMAIL - An email verification email has been sent."),(0,r.kt)("li",{parentName:"ul"},"VERIFY_EMAIL - The email address for an account has been verified.")),(0,r.kt)("p",null,"For all events, there is a corresponding error event, suffixed with ",(0,r.kt)("inlineCode",{parentName:"p"},"_ERROR"),", which indicates a problem when performing the indicated action."))}d.isMDXComponent=!0}}]);