"use strict";(self.webpackChunkphasetwo_docs=self.webpackChunkphasetwo_docs||[]).push([[9950],{603905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(667294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=u(r),m=o,f=d["".concat(s,".").concat(m)]||d[m]||l[m]||a;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},755136:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return l}});var n=r(583117),o=r(480102),a=(r(667294),r(603905)),i=["components"],c={id:"setup",title:"Setup"},s=void 0,u={unversionedId:"connect/setup",id:"connect/setup",title:"Setup",description:"The standard Phase Two Docker image contains the base version of Phase Two Connect by default. This restricts the IdP onboarding wizards to the generic SAML, OIDC and LDAP protocol wizards. If you are a licensee with a support agreement, talk to your customer success representative about accessing your private image registry.",source:"@site/docs/connect/setup.md",sourceDirName:"connect",slug:"/connect/setup",permalink:"/docs/connect/setup",draft:!1,editUrl:"https://github.com/p2-inc/phasetwo-docs/tree/master/docs/connect/setup.md",tags:[],version:"current",frontMatter:{id:"setup",title:"Setup"},sidebar:"docs",previous:{title:"Connect",permalink:"/docs/connect/"}},p={},l=[{value:"Realm import",id:"realm-import",level:3},{value:"Onboarding Guide",id:"onboarding-guide",level:3}],d={toc:l};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The standard ",(0,a.kt)("a",{parentName:"p",href:"https://quay.io/repository/phasetwo/phasetwo-keycloak?tab=tags"},"Phase Two Docker image")," contains the base version of Phase Two Connect by default. This restricts the IdP onboarding wizards to the generic SAML, OIDC and LDAP protocol wizards. If you are a licensee with a support agreement, talk to your customer success representative about accessing your private image registry."),(0,a.kt)("h3",{id:"realm-import"},"Realm import"),(0,a.kt)("p",null,"You are encouraged ",(0,a.kt)("strong",{parentName:"p"},"not")," to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"master")," realm to secure your deployed application. A default realm with your initial setup parameters can be imported on install. Please see the ",(0,a.kt)("a",{parentName:"p",href:"https://www.keycloak.org/server/importExport"},"guide")," on importing a realm a startup. Your specific method will depend on if you are deploying with Kubernetes or some other mechanism."),(0,a.kt)("h3",{id:"onboarding-guide"},"Onboarding Guide"),(0,a.kt)("p",null,"It is recommended to provide your on-prem customers with an onboarding guide that includes a way of accessing their Keycloak credentials following initial installtion in their cluster. You can create a link to the Phase Two Connect onboarding portal using the following format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    https://<your-host-name>/auth/realms/<your-realm-name>/wizard/\n")),(0,a.kt)("p",null,"Your customer will use their admin credentials to login and setup their IdP integration."))}m.isMDXComponent=!0}}]);