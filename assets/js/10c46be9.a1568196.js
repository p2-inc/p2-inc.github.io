"use strict";(self.webpackChunkphasetwo_docs=self.webpackChunkphasetwo_docs||[]).push([[7895],{5479:e=>{e.exports=JSON.parse('{"version":{"pluginId":"articles","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{},"docs":{"introduction":{"id":"introduction","title":"Introduction","description":"Items here are related to how to use Keycloak and authentication."},"jwts/decoding-jwt-structure":{"id":"jwts/decoding-jwt-structure","title":"Decoding JWT Structure","description":"JSON Web Tokens (JWTs) are compact, URL-safe tokens commonly used in modern authentication and authorization systems, particularly with OAuth2 flows. This guide provides a technical deep-dive into JWT architecture, examining each component and its role in the token\'s security and functionality."},"jwts/index":{"id":"jwts/index","title":"JWTs","description":"JWTs"},"jwts/jwt-benefits-drawbacks":{"id":"jwts/jwt-benefits-drawbacks","title":"Benefits and Drawbacks of JWTs","description":"This comprehensive guide on JSON Web Tokens (JWTs) will cover the implementation considerations, architectural trade-offs, and practical alternatives for modern applications."},"jwts/jwt-security-best-practices":{"id":"jwts/jwt-security-best-practices","title":"Security Best Practices","description":"JSON Web Tokens (JWTs) are a widely adopted standard for authentication and authorization in modern web applications. Despite some criticism regarding their security, JWTs can provide robust protection when properly implemented."}}}}')}}]);