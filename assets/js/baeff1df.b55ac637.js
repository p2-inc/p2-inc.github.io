"use strict";(self.webpackChunkphasetwo_docs=self.webpackChunkphasetwo_docs||[]).push([[5897],{603905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var a=n(667294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(h,i(i({ref:t},l),{},{components:n})):a.createElement(h,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},772065:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var a=n(583117),r=n(480102),o=(n(667294),n(603905)),i=["components"],c={id:"authentication",title:"Authentication"},s=void 0,p={unversionedId:"api/authentication",id:"api/authentication",title:"Authentication",description:"Authentication is achieved by using the Authentication: Bearer  header in all requests. This is either the access token received from a normal authentication, or by a request directly to the OpenID Connect token endpoint.",source:"@site/docs/api/authentication.md",sourceDirName:"api",slug:"/api/authentication",permalink:"/docs/api/authentication",draft:!1,editUrl:"https://github.com/p2-inc/phasetwo-docs/tree/master/docs/api/authentication.md",tags:[],version:"current",frontMatter:{id:"authentication",title:"Authentication"},sidebar:"docs",previous:{title:"Service Accounts",permalink:"/docs/api/service-accounts"},next:{title:"Software Development Kits",permalink:"/docs/api/sdks"}},l={},u=[{value:"Example requests",id:"example-requests",level:3},{value:"Client credentials grant example",id:"client-credentials-grant-example",level:4},{value:"Password grant example",id:"password-grant-example",level:4},{value:"Example response",id:"example-response",level:3}],d={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Authentication is achieved by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"Authentication: Bearer <token>")," header in all requests. This is either the access token received from a normal authentication, or by a request directly to the OpenID Connect token endpoint."),(0,o.kt)("p",null,"It is recommended that you use a Keycloak Admin Client, such as ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/keycloak/keycloak-nodejs-admin-client"},"this one for Javascript"),", as they take care of authentication, getting an access token, and refreshing it when it expires."),(0,o.kt)("h3",{id:"example-requests"},"Example requests"),(0,o.kt)("h4",{id:"client-credentials-grant-example"},"Client credentials grant example"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"client_credentials")," grant type is used if you are following the recommended convention of making a service account to call the APIs. See the previous section on ",(0,o.kt)("a",{parentName:"p",href:"service-accounts"},"service accounts")," if you need to set one up."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"POST /auth/realms/test-realm/protocol/openid-connect/token\nHost: app.phasetwo.io\nAccept: application/json\nContent-type: application/x-www-form-urlencoded\n\ngrant_type=client_credentials&client_id=admin-cli&client_secret=fd649804-3a74-4d69-acaa-8f065c6b7da1\n")),(0,o.kt)("h4",{id:"password-grant-example"},"Password grant example"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"password")," grant type can be used if normal users are using their credentials to obtain a token manually for the purpose of calling the APIs."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"POST /auth/realms/test-realm/protocol/openid-connect/token\nHost: app.phasetwo.io\nAccept: application/json\nContent-type: application/x-www-form-urlencoded\n\ngrant_type=password&username=uname@foo.com&password=pwd123AZY&client_id=admin-cli\n")),(0,o.kt)("h3",{id:"example-response"},"Example response"),(0,o.kt)("p",null,"The response to each type will be a JSON document containing the access token and some information about type and expiration."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",\n  "token_type": "bearer",\n  "expires_in": 60\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"access_token")," value will be used in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Authorization: Bearer {access_token}")," header for all authenticated API requests."))}m.isMDXComponent=!0}}]);